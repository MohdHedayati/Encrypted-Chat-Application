# Application Name
spring.application.name=chat-server

# Server Configuration
server.port=8443

# TLS/SSL Settings (KEEP YOUR EXISTING KEYSTORE CONFIG)
server.ssl.enabled=true
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=mohammed
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=chatserver

# H2 Database Configuration (ADD THIS)
#spring.datasource.url=jdbc:h2:file:./data/chatdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#
## JPA Configuration (ADD THIS)
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# H2 Console (ADD THIS)
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console


# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/chatapp
spring.datasource.username=chatuser
spring.datasource.password=chatpass123
spring.datasource.driver-class-name=org.postgresql.Driver



# Session Configuration (ADD THIS - Important for session-based auth)
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=lax

# CORS Configuration (ADD THIS if frontend is on different port)
spring.web.cors.allowed-origins=http://localhost:3000,https://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true